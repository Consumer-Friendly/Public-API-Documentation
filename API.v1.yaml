openapi: 3.0.0
info:
  title: Consumer Friendly
  version: '1.0'
  description: Our public base API for developers
  contact:
    name: Chase Roossin
    email: chase@consumerfriendly.io
servers:
  - url: 'https://api.consumerfriendly.io'
    description: Consumer Friendly Base API
paths:
  '/v1/message/{employerId}/send':
    parameters:
      - schema:
          type: string
        name: employerId
        in: path
        required: true
        description: The identifier of the employer
    post:
      summary: Send Message
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./models/Review.v1.json
              examples:
                Sample Review Schema:
                  value:
                    review:
                      createdAt: '2020-02-21T02:38:17.963Z'
                      updatedAt: '2020-02-21T02:38:27.145Z'
                      submittedAt: '2020-02-21T02:38:27.142Z'
                      tipAmount: 10
                      feedback: What wonderful service
                      stars: 5
      operationId: post-v1-message-send-employerId
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./models/Send-Message-Model.v1.json
            examples:
              Sample Send Message Schema:
                value:
                  toNumber: '9495555555'
                  toEmail: mycustomer@example.com
                  agentId: 5e38d81abdc4741e28dda213
                  statusCallback: 'https://myapi.company.com/statusurl'
      security:
        - x-api-key: []
      description: Sends a message to a particular phone number on behalf of an agent of a company
      parameters:
        - schema:
            type: string
            default: application/json
          in: header
          name: Content-Type
          description: ''
          required: true
      tags:
        - Message
  '/v1/user/{employerId}/list':
    parameters:
      - schema:
          type: string
        name: employerId
        in: path
        required: true
    get:
      summary: Get Agent List
      tags:
        - Agents
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./models/AgentModel.v1.yaml
              examples:
                Agent List Example:
                  value:
                    agents:
                      - _id: 5de94545a094600e9cbffed3
                        firstName: Robert
                        email: robert@consumerfriendly.io
                      - _id: 5de94554a024600e9cbffed4
                        firstName: Jamie
                        email: jamie@consumerfriendly.io
      operationId: get-v1-user-employerId-list
      parameters:
        - schema:
            type: string
          in: header
          name: x-api-key
          required: true
      description: Get the list of employers agents
components:
  schemas: {}
  securitySchemes:
    x-api-key:
      name: x-api-key
      type: apiKey
      in: header
